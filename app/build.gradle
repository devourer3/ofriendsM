apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-allopen'
apply plugin: "androidx.navigation.safeargs.kotlin"

allOpen {
    // allows mocking for classes w/o directly opening them for release builds
    annotation 'com.gibeom.legocatalog.testing.OpenClass'
}

android {
    compileSdkVersion 29

    dataBinding {
        enabled = true
        enabledForTests = true
    }


    defaultConfig {
        applicationId "com.gibeom.ofriendsmobile"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0.0.1"
        vectorDrawables.useSupportLibrary true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            debuggable true
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled true
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    // work-runtime-ktx 2.1.0 and above now requires Java 8
    kotlinOptions {
        jvmTarget = "1.8"
    }

    applicationVariants.all { variant ->
        variant.outputs.all {
            def flavor = variant.name
            def versionName = variant.versionName.replace(".","_")
            def project = "OfriendsM"
//            def file = output.outputFile
            def buildType = variant.variantData.variantConfiguration.buildType.name

            outputFileName = "${project}_${flavor}_${versionName}.apk"

//            output.outputFile =
//                    new File(file.parent, file.name.replace("app-release", buildType + "_" + project + "_" + version + ".apk"))
//            if (buildType.equals("release"))
//                newApkName = project + "_" + version + ".apk"
//            outputFileName = new File("./../../../../build/", newApkName)
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"
    implementation 'androidx.core:core-ktx:1.2.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation "androidx.core:core-ktx:1.2.0"
    implementation "androidx.fragment:fragment-ktx:1.2.2"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'


    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"

    implementation "androidx.navigation:navigation-fragment-ktx:$navigationVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navigationVersion"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"


    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"

    implementation "androidx.recyclerview:recyclerview:1.2.0-alpha01"
    implementation "androidx.paging:paging-runtime:2.1.1"
    implementation "androidx.work:work-runtime-ktx:2.3.2"
    implementation "com.google.android.material:material:1.1.0"

    // Room
    implementation "androidx.room:room-ktx:$roomVersion"
    implementation "androidx.room:room-runtime:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"

    // Extensions = ViewModel + LiveData
//    implementation "android.arch.lifecycle:extensions:1.1.1"
//    kapt "android.arch.lifecycle:compiler:1.1.1"
// Room
//    implementation "android.arch.persistence.room:runtime:1.1.1"
//    kapt "android.arch.persistence.room:compiler:1.1.1"


    // Dagger
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"
    implementation "com.google.dagger:dagger:$daggerVersion"
    implementation "com.google.dagger:dagger-android:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
    // Using Dagger in androidTest and Robolectric too
    kaptAndroidTest "com.google.dagger:dagger-compiler:$daggerVersion"
    kaptTest "com.google.dagger:dagger-compiler:$daggerVersion"

    // Glide
    kapt "com.github.bumptech.glide:compiler:$glideVersion"
    implementation "com.github.bumptech.glide:glide:$glideVersion"

    // Timber
    implementation "com.jakewharton.timber:timber:4.7.1"

    // Gson
    implementation "com.google.code.gson:gson:2.8.5"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"

    // OkHttp3
    implementation "com.squareup.okhttp3:okhttp:$okhttpVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttpVersion"
    testImplementation "com.squareup.okhttp3:mockwebserver:$okhttpVersion"


    // Stetho
    implementation "com.facebook.stetho:stetho:$stethoVersion"
    implementation "com.facebook.stetho:stetho-okhttp3:$stethoVersion"


//    /* Dependencies for local unit tests */
//    testImplementation "androidx.arch.core:core-testing:$archTestingVersion"
//
//    testImplementation "junit:junit:$junitVersion"
//    testImplementation "org.mockito:mockito-core:$mockitoVersion"
//    testImplementation "org.mockito:mockito-inline:$mockitoVersion"
//
//    testImplementation "org.hamcrest:hamcrest-all:$hamcrestVersion"
//
//    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"
//    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion"
//
//    testImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
//    testImplementation "androidx.test.espresso:espresso-contrib:$espressoVersion"
//    testImplementation "androidx.test.espresso:espresso-intents:$espressoVersion"
//
//    testImplementation "org.robolectric:robolectric:$robolectricVersion"
//
//    testImplementation "com.google.truth:truth:$truthVersion"
//
//
//    /* Dependencies for Android unit tests */
//    androidTestImplementation "junit:junit:$junitVersion"
//    androidTestImplementation "org.mockito:mockito-core:$mockitoVersion"
//
//    androidTestImplementation "com.linkedin.dexmaker:dexmaker-mockito:$dexMakerVersion"
//    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion"
//
//    /* AndroidX Test - JVM testing */
//    testImplementation "androidx.test:core-ktx:$androidXTestCoreVersion"
//    testImplementation "androidx.test.ext:junit-ktx:$androidXTestExtKotlinRunnerVersion"
//    testImplementation "androidx.test:rules:$androidXTestRulesVersion"
//    debugImplementation "androidx.fragment:fragment-testing:$fragmentVersion"
//
//    implementation "androidx.test:core:$androidXTestCoreVersion"
//    implementation "androidx.fragment:fragment:$fragmentVersion"
//
//    /* AndroidX Test - Instrumented testing */
//    androidTestImplementation "androidx.test:core-ktx:$androidXTestCoreVersion"
//    androidTestImplementation "androidx.test.ext:junit-ktx:$androidXTestExtKotlinRunnerVersion"
//    androidTestImplementation "androidx.test:rules:$androidXTestRulesVersion"
//
//    androidTestImplementation "androidx.room:room-testing:$roomVersion"
//    androidTestImplementation "androidx.arch.core:core-testing:$archTestingVersion"
//
//    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
//    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espressoVersion"
//    androidTestImplementation "androidx.test.espresso:espresso-intents:$espressoVersion"
//    androidTestImplementation "androidx.test.espresso.idling:idling-concurrent:$espressoVersion"
//    implementation "androidx.test.espresso:espresso-idling-resource:$espressoVersion"
//
//    androidTestImplementation "org.robolectric:annotations:$robolectricVersion"
//
//
//    /* Resolve conflicts between main and test APK: */
//    androidTestImplementation "androidx.annotation:annotation:$androidXAnnotations"
//    androidTestImplementation "androidx.legacy:legacy-support-v4:$androidXLegacySupport"
//    androidTestImplementation "androidx.recyclerview:recyclerview:$recyclerViewVersion"
//    androidTestImplementation "androidx.appcompat:appcompat:$appCompatVersion"
//    androidTestImplementation "com.google.android.material:material:$materialVersion"

}
