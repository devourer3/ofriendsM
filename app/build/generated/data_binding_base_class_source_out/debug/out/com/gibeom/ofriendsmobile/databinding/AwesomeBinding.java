// Generated by data binding compiler. Do not edit!
package com.gibeom.ofriendsmobile.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ProgressBar;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewpager.widget.ViewPager;
import com.gibeom.ofriendsmobile.R;
import com.gibeom.ofriendsmobile.home.ui.HomeViewModel;
import com.google.android.material.tabs.TabLayout;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class AwesomeBinding extends ViewDataBinding {
  @NonNull
  public final ProgressBar pBMainBanner;

  @NonNull
  public final ProgressBar pBRisingPrd;

  @NonNull
  public final RecyclerView rVCategory;

  @NonNull
  public final RecyclerView rVRisingLife;

  @NonNull
  public final TabLayout tLIndicator;

  @NonNull
  public final AppCompatTextView tVRiseEntire;

  @NonNull
  public final AppCompatTextView tVRisingLife;

  @NonNull
  public final ViewPager vPMainBanner;

  @Bindable
  protected HomeViewModel mVmHome;

  protected AwesomeBinding(Object _bindingComponent, View _root, int _localFieldCount,
      ProgressBar pBMainBanner, ProgressBar pBRisingPrd, RecyclerView rVCategory,
      RecyclerView rVRisingLife, TabLayout tLIndicator, AppCompatTextView tVRiseEntire,
      AppCompatTextView tVRisingLife, ViewPager vPMainBanner) {
    super(_bindingComponent, _root, _localFieldCount);
    this.pBMainBanner = pBMainBanner;
    this.pBRisingPrd = pBRisingPrd;
    this.rVCategory = rVCategory;
    this.rVRisingLife = rVRisingLife;
    this.tLIndicator = tLIndicator;
    this.tVRiseEntire = tVRiseEntire;
    this.tVRisingLife = tVRisingLife;
    this.vPMainBanner = vPMainBanner;
  }

  public abstract void setVmHome(@Nullable HomeViewModel vmHome);

  @Nullable
  public HomeViewModel getVmHome() {
    return mVmHome;
  }

  @NonNull
  public static AwesomeBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup root,
      boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.awesome, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static AwesomeBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup root,
      boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<AwesomeBinding>inflateInternal(inflater, R.layout.awesome, root, attachToRoot, component);
  }

  @NonNull
  public static AwesomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.awesome, null, false, component)
   */
  @NonNull
  @Deprecated
  public static AwesomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<AwesomeBinding>inflateInternal(inflater, R.layout.awesome, null, false, component);
  }

  public static AwesomeBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static AwesomeBinding bind(@NonNull View view, @Nullable Object component) {
    return (AwesomeBinding)bind(component, view, R.layout.awesome);
  }
}
