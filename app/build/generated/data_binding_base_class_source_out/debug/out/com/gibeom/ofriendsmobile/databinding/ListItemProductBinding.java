// Generated by data binding compiler. Do not edit!
package com.gibeom.ofriendsmobile.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatCheckBox;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.gibeom.ofriendsmobile.R;
import com.gibeom.ofriendsmobile.home.data.Product;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class ListItemProductBinding extends ViewDataBinding {
  @NonNull
  public final AppCompatCheckBox cBLike;

  @NonNull
  public final ConstraintLayout cLRiEntire;

  @NonNull
  public final AppCompatImageView iVRiImage;

  @NonNull
  public final AppCompatTextView tVRiCatchPhrase;

  @NonNull
  public final AppCompatTextView tVRiPrice;

  @NonNull
  public final AppCompatTextView tVRiTitle;

  @Bindable
  protected Product mProduct;

  protected ListItemProductBinding(Object _bindingComponent, View _root, int _localFieldCount,
      AppCompatCheckBox cBLike, ConstraintLayout cLRiEntire, AppCompatImageView iVRiImage,
      AppCompatTextView tVRiCatchPhrase, AppCompatTextView tVRiPrice, AppCompatTextView tVRiTitle) {
    super(_bindingComponent, _root, _localFieldCount);
    this.cBLike = cBLike;
    this.cLRiEntire = cLRiEntire;
    this.iVRiImage = iVRiImage;
    this.tVRiCatchPhrase = tVRiCatchPhrase;
    this.tVRiPrice = tVRiPrice;
    this.tVRiTitle = tVRiTitle;
  }

  public abstract void setProduct(@Nullable Product product);

  @Nullable
  public Product getProduct() {
    return mProduct;
  }

  @NonNull
  public static ListItemProductBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.list_item_product, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ListItemProductBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ListItemProductBinding>inflateInternal(inflater, R.layout.list_item_product, root, attachToRoot, component);
  }

  @NonNull
  public static ListItemProductBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.list_item_product, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ListItemProductBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ListItemProductBinding>inflateInternal(inflater, R.layout.list_item_product, null, false, component);
  }

  public static ListItemProductBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ListItemProductBinding bind(@NonNull View view, @Nullable Object component) {
    return (ListItemProductBinding)bind(component, view, R.layout.list_item_product);
  }
}
