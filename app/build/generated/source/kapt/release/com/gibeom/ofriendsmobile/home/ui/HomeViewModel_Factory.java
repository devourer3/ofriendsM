// Generated by Dagger (https://dagger.dev).
package com.gibeom.ofriendsmobile.home.ui;

import android.app.Application;
import com.gibeom.ofriendsmobile.repository.ProductListRepository;
import dagger.internal.Factory;
import javax.inject.Provider;
import kotlinx.coroutines.CoroutineScope;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class HomeViewModel_Factory implements Factory<HomeViewModel> {
  private final Provider<ProductListRepository> repositoryProvider;

  private final Provider<Application> contextProvider;

  private final Provider<CoroutineScope> scopeProvider;

  public HomeViewModel_Factory(Provider<ProductListRepository> repositoryProvider,
      Provider<Application> contextProvider, Provider<CoroutineScope> scopeProvider) {
    this.repositoryProvider = repositoryProvider;
    this.contextProvider = contextProvider;
    this.scopeProvider = scopeProvider;
  }

  @Override
  public HomeViewModel get() {
    return new HomeViewModel(repositoryProvider.get(), contextProvider.get(), scopeProvider.get());
  }

  public static HomeViewModel_Factory create(Provider<ProductListRepository> repositoryProvider,
      Provider<Application> contextProvider, Provider<CoroutineScope> scopeProvider) {
    return new HomeViewModel_Factory(repositoryProvider, contextProvider, scopeProvider);
  }

  public static HomeViewModel newInstance(ProductListRepository repository, Application context,
      CoroutineScope scope) {
    return new HomeViewModel(repository, context, scope);
  }
}
