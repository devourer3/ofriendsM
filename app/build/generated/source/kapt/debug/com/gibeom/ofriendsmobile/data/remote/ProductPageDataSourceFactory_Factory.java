// Generated by Dagger (https://dagger.dev).
package com.gibeom.ofriendsmobile.data.remote;

import com.gibeom.ofriendsmobile.data.local.OfriendsDao;
import com.gibeom.ofriendsmobile.home.ui.HomeViewModel;
import com.gibeom.ofriendsmobile.promo.data.PromoViewModel;
import dagger.internal.Factory;
import javax.inject.Provider;
import kotlinx.coroutines.CoroutineScope;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ProductPageDataSourceFactory_Factory implements Factory<ProductPageDataSourceFactory> {
  private final Provider<String> queryProvider;

  private final Provider<ProductListRemoteDataSource> dataSourceProvider;

  private final Provider<CoroutineScope> scopeProvider;

  private final Provider<PromoViewModel> promoViewModelProvider;

  private final Provider<HomeViewModel> homeViewModelProvider;

  private final Provider<OfriendsDao> daoProvider;

  public ProductPageDataSourceFactory_Factory(Provider<String> queryProvider,
      Provider<ProductListRemoteDataSource> dataSourceProvider,
      Provider<CoroutineScope> scopeProvider, Provider<PromoViewModel> promoViewModelProvider,
      Provider<HomeViewModel> homeViewModelProvider, Provider<OfriendsDao> daoProvider) {
    this.queryProvider = queryProvider;
    this.dataSourceProvider = dataSourceProvider;
    this.scopeProvider = scopeProvider;
    this.promoViewModelProvider = promoViewModelProvider;
    this.homeViewModelProvider = homeViewModelProvider;
    this.daoProvider = daoProvider;
  }

  @Override
  public ProductPageDataSourceFactory get() {
    return new ProductPageDataSourceFactory(queryProvider.get(), dataSourceProvider.get(), scopeProvider.get(), promoViewModelProvider.get(), homeViewModelProvider.get(), daoProvider.get());
  }

  public static ProductPageDataSourceFactory_Factory create(Provider<String> queryProvider,
      Provider<ProductListRemoteDataSource> dataSourceProvider,
      Provider<CoroutineScope> scopeProvider, Provider<PromoViewModel> promoViewModelProvider,
      Provider<HomeViewModel> homeViewModelProvider, Provider<OfriendsDao> daoProvider) {
    return new ProductPageDataSourceFactory_Factory(queryProvider, dataSourceProvider, scopeProvider, promoViewModelProvider, homeViewModelProvider, daoProvider);
  }

  public static ProductPageDataSourceFactory newInstance(String query,
      ProductListRemoteDataSource dataSource, CoroutineScope scope, PromoViewModel promoViewModel,
      HomeViewModel homeViewModel, OfriendsDao dao) {
    return new ProductPageDataSourceFactory(query, dataSource, scope, promoViewModel, homeViewModel, dao);
  }
}
